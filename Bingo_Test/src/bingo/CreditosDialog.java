package bingo;

import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 * Clase que muestra una ventana emergente con los cr√©ditos del juego Bingo.
 * Incluye imagen de fondo y animaci√≥n tipo m√°quina de escribir para el texto.
 */
public class CreditosDialog extends JDialog {

    private BufferedImage backgroundImage; // Imagen de fondo para el panel

    /**
     * Constructor que crea el di√°logo de cr√©ditos.
     * @param parent Ventana principal desde la que se invoca (puede ser null).
     */
    public CreditosDialog(JFrame parent) {
        super(parent, "Cr√©ditos del Bingo", false); // Di√°logo no modal con t√≠tulo
        setAlwaysOnTop(true);                      // Siempre visible por encima de otras ventanas
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);// Al cerrar solo se cierra esta ventana
        setResizable(false);                       // No se puede redimensionar

        // Intentar cargar la imagen de fondo desde los recursos
        try {
            backgroundImage = ImageIO.read(getClass().getResource("/bingo/creditos.png"));
        } catch (IOException e) {
            e.printStackTrace(); // Mostrar error si no se encuentra o falla al cargar
        }

        // Panel personalizado con la imagen de fondo pintada
        JPanel panel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                if (backgroundImage != null) {
                    // Dibuja la imagen escalada al tama√±o del panel
                    g.drawImage(backgroundImage, 0, 0, getWidth(), getHeight(), this);
                }
            }
        };

        // Establece layout y m√°rgenes al panel
        panel.setLayout(new BorderLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(20, 30, 20, 30));

        // √Årea de texto que mostrar√° los cr√©ditos con animaci√≥n
        JTextArea textArea = new JTextArea();
        textArea.setFont(new Font("Ubuntu Mono", Font.BOLD, 22)); // Fuente estilo consola
        textArea.setEditable(false);     // El usuario no puede editar el texto
        textArea.setOpaque(false);       // Hace el fondo del √°rea de texto transparente
        textArea.setFocusable(false);    // No recibe foco
        textArea.setWrapStyleWord(true); // Ajusta palabras completas al hacer salto de l√≠nea
        textArea.setLineWrap(true);      // Permite salto de l√≠nea autom√°tico

        panel.add(textArea, BorderLayout.CENTER); // A√±ade el √°rea de texto al centro del panel
        add(panel); // A√±ade el panel principal al di√°logo

        // Texto de los cr√©ditos (multil√≠nea usando """ desde Java 15+)
        String textoCreditos = """
                               
                                     üéâ Cr√©ditos del Bingo üéâ

                        Este programa ha sido desarrollado con
                    ilusi√≥n, esfuerzo y muchas ganas de aprender

                                      Trabajo realizado por:

                                    Javier Lanzas Gonz√°lez
                             Samuel Donato Mu√±oz Povedano

                                       ¬°Gracias por jugar!
                    ¬°Buena suerte y que cante bingo el mejor! üèÜ
                               
                """;

        // Establece el tama√±o ideal seg√∫n el texto completo (aunque se ocultar√° para animaci√≥n)
        textArea.setText(textoCreditos);
        textArea.setSize(500, Short.MAX_VALUE);
        Dimension preferredSize = textArea.getPreferredSize();

        // Define el tama√±o del di√°logo en base al texto + m√°rgenes
        setSize(preferredSize.width + 80, preferredSize.height + 100);
        textArea.setText(""); // Limpia el texto antes de animar

        setLocationRelativeTo(parent);  // Centra la ventana respecto al padre
        setVisible(true);               // Muestra el di√°logo

        // Hilo que crea animaci√≥n tipo "m√°quina de escribir"
        new Thread(() -> {
            for (char c : textoCreditos.toCharArray()) {
                // A√±ade car√°cter por car√°cter al √°rea de texto desde el hilo principal
                SwingUtilities.invokeLater(() -> textArea.append(String.valueOf(c)));
                try {
                    Thread.sleep(40); // Espera 40ms entre cada car√°cter
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt(); // Restablece el estado si es interrumpido
                }
            }
        }).start();
    }

    /**
     * M√©todo est√°tico para mostrar el di√°logo desde otra clase.
     * @param parent Ventana desde la que se llama
     */
    public static void mostrar(JFrame parent) {
        new CreditosDialog(parent); // Instancia y muestra el di√°logo
    }
}